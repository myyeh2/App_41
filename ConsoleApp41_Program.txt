// Dennis G. Zill "Differential Equations with Boundary-Value
// Problems 9th Edition"  Page 322 Example 1  
using System;
using Matrix_0;

namespace ConsoleApp41
{
    internal class Program
    {
        static void Main(string[] args)
        {
    // 初始值
    double[,] y0Start = { { 1 }, { -1 }, { 0 }, { 0 } };

    // 由M，K，C矩陣，建構系統矩陣A。
    double[,] M = { { 1, 0 }, { 0, 1 } };
    double[,] K = { { 10, -4 }, { -4, 4 } };
    double[,] C = { { 0, 0 }, { 0, 0 } };
    MKCMatrix MKC = new MKCMatrix(M, K, C);
    ReMatrix A = new ReMatrix(MKC.Matrix);

    // 系統與狀態參數(矩陣D、矩陣Q、和係數向量d）
    // 特徵值D與特徵向量Q。
    EIG eig = new EIG(A);
    CxMatrix D = eig.CxMatrixD;
    CxMatrix V = eig.CxVector;
    CxMatrix Q = eig.CxMatrixQ;
    // 係數向量d
    CxToHexp Hexp = new CxToHexp(D, Q, 0);
    CxMatrix MatTemp = Hexp.GetCxMatrix;
    CxMatrix d = ~MatTemp * y0Start;

    // 列印標題。
    Console.Write("\n****{0,6}系{0,5}統{0,5}與{0,5}狀{0,5}態{0,5}參{0,5}數{0,6}****\n", "");
    
    // 列印系統與狀態參數。
    Console.Write("\n***{0,5}系統特徵值V{0,5}***\n{1}\n", "", new PR(V));
    Console.Write("\n***{0,5}系統特徵向量Q{0,5}***\n{1}\n", "", new PR(Q));
    Console.Write("\n***{0,5}係數向量d{0,5}***\n{1}\n", "", new PR(d));

    double step = 0.25;
    int iRow = (int)(20 / step + 1);
    int iCol = M.GetLength(1) + 1;
    ReMatrix Disp = new ReMatrix(iRow, iCol);
    ReMatrix Vel = new ReMatrix(iRow, iCol);
    ReMatrix Acc = new ReMatrix(iRow, iCol);

    for (int i = 0; i != iRow; i++)
    {
        double t = step * i;

        Hexp = new CxToHexp(D, Q, t);
        MatTemp = Hexp.GetCxMatrix;
        ReMatrix yh_Re = (ReMatrix)(MatTemp * d);
        ReMatrix yhDot_Re = A * yh_Re;

        Acc.Matrix[i, 0] = t;
        Acc.Matrix[i, 1] = yhDot_Re.Matrix[0, 0];
        Acc.Matrix[i, 2] = yhDot_Re.Matrix[1, 0];

        Vel.Matrix[i, 0] = t;
        Vel.Matrix[i, 1] = yh_Re.Matrix[0, 0];
        Vel.Matrix[i, 2] = yh_Re.Matrix[1, 0];

        Disp.Matrix[i, 0] = t;
        Disp.Matrix[i, 1] = yh_Re.Matrix[2, 0];
        Disp.Matrix[i, 2] = yh_Re.Matrix[3, 0];
    }

    // 列印狀態響應(空間節點之變位，速度，和加速)。 
    Console.Write("\n****{0,6}空{0,5}間{0,5}狀{0,5}態{0,5}響{0,5}應{0,6}****\n", ""); 

    Console.Write("\n{0,5}***位移反應量***{0,5}\n{0,8}時間(秒)" +
    "{0,8}第0點位移{0,8}第1點位移\n\n{1}", "", new PR(Disp));
    Console.Write("\n{0,5}***速度反應量***{0,5}\n{0,8}時間(秒)" +
    "{0,8}第0點速度{0,8}第1點速度\n\n{1}", "", new PR(Vel));
    Console.Write("\n***{0,5}加速度反應量{0,5}***\n{0,8}時間(秒)" +
    "{0,8}第0點加速度{0,7}第1點加速度\n\n{1}", "", new PR(Acc));

    // 以上的輸出方式可作爲Excel繪圖，以下的輸出方式可作爲Matplotlib繪圖。

    // 列印時間、節點變位、速度、和加速度等序列。
    Console.Write("\n時間序列 :\n{0}\n", new PR4(Disp, 0, "{0,8:F2}"));
    Console.Write("\n第0點變位序列 :\n{0}\n", new PR4(Disp, 0));
    Console.Write("\n第1點變位序列 :\n{0}\n", new PR4(Disp, 0));
    Console.Write("\n第0點速度序列 :\n{0}\n", new PR4(Vel, 0));
    Console.Write("\n第1點速度序列 :\n{0}\n", new PR4(Vel, 0));
    Console.Write("\n\n"); 

        }
    }
}
